---
import Footer from './Footer.astro';
import Header from './Header.astro';

interface Props {
    pageId: string;
    title: string;
    description: string;
}

const { pageId, title, description } = Astro.props;

const currentPath = new URL(Astro.request.url).pathname;
---

<!doctype html>
<html lang="ja">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content={description} />
        <link rel="icon" type="image/svg+xml" href="/favicon.png" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>

        <!-- Open Graph tags -->
         
        <meta property="og:type" content="website" />
        <meta property="og:title" content={title} />
        <meta property="og:site_name" content={description} />
        <meta property="og:url" content="" />
        <meta property="og:description" content="" />
        <meta property="og:image" content="" />

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;700&family=Inter:wght@100..900&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Noto+Sans+JP:wght@100..900&family=Zen+Kaku+Gothic+Antique&display=swap" rel="stylesheet">
        
        <!-- Icons -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.10.2/lottie.min.js"></script>

    </head>
    <body data-pageId={pageId}>
        <Header currentPath={currentPath} />
            <slot />
        <Footer />

    </body>
</html>

<style is:global lang="scss">

    @font-face {
        font-family: 'PixelMplus12';
        src: url('/assets/font/PixelMplus12-Regular.ttf') format('truetype');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }

    @font-face {
        font-family: 'PixelMplus12';
        src: url('/assets/font/PixelMplus12-Bold.ttf') format('truetype');
        font-weight: bold;
        font-style: normal;
        font-display: swap;
    }
    @font-face {
        font-family: 'emulogic';
        src: url('/assets/font/emulogic.ttf') format('truetype');
        font-weight: bold;
        font-style: normal;
        font-display: swap;
    }

    @import '../styles/vars.scss';
    @import '../styles/html5doctor.scss';
    @import '../styles/reset.scss';
    @import '../styles/common.scss';
    

    // Root styles
    html {
        scroll-behavior: smooth;
        font-size: 10px;

        @media screen and (width <= 1000px) {
            font-size: 1vw;
        }

        @include max-screen($bp-sp) {
            font-size: 2.6667vw;
        }
    }

    body {
        background: #fff;
        // background: #161860;
        font-size: 1.6rem;
        font-family: "Noto Sans Japanese", "ヒラギノ角ゴ ProN", "Hiragino Kaku Gothic ProN", "メイリオ", Meiryo, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
        line-height: 1.5;

        @include max-screen($bp-sp) {
            font-size: 1.4rem;
        }
    }

    .font-pixel {
        font-family: "PixelMplus12"!important;
    }

    .fp {
        font-family: 'emulogic', sans-serif;
    }

    .xl-inner {
        width: 90%;
        margin: 0 auto;
        max-width: 1200px;

        @include max-screen(1300px) {
            max-width: 90%;
        }
    }
    .l-inner {
        margin: 0 auto;
        width: $inner-width;

        @include max-screen(1200px) {
            width: 85%;
        }

        @include max-screen($bp-sp) {
            padding: 0 1.5rem;
            width: 100%;
        }
    }

    // Element styles
    img {
        height: auto;
        max-height: 100%;
        max-width: 100%;
        vertical-align: middle;
    }

    sup {
        font-size: 50%;
        vertical-align: super;
    }

    .p-ttl {
        font-size: 4.8rem;
        font-weight: 400;
        margin-bottom: 2rem;
    }


    .btn-A {
        width: 28rem;
        border-bottom: 1px solid #ccc;
        margin: 0 auto;

        @include max-screen($bp-sp) {
            width: 80%;

        }

        a {
            color: #000;
            padding: 2rem 1rem;
            font-size: 2rem;
            display: flex;
            align-items: center;
            
            @include max-screen($bp-sp) {
                font-size: 1.4rem;
                padding: 1.5rem 1rem;
            }

            &::before {
                content: "";
                margin-right: 1.5rem;
                width: 1rem;
                height: 1.6rem;
                display: block;
                background: url(../assets/images/common/pointer-black.webp) no-repeat center center;
                background-size: cover;
            }

            &:hover {
                background: #000;
                color: #fff;
                text-decoration: none;

                &::before {
                    background: url(../assets/images/common/pointer-white.webp) no-repeat center center;
                    background-size: cover;
                }
            }
        }

        &--white {
            a {
            color: #fff;
            

            &::before {
                background: url(../assets/images/common/pointer-white.webp) no-repeat center center;
                background-size: cover;
            }

            &:hover {
                background: #fff;
                color: #000;
                text-decoration: none;

                &::before {
                    background: url(../assets/images/common/pointer-black.webp) no-repeat center center;
                    background-size: cover;
                }
            }
        }
        }
    }

    .page-kv {
        margin-bottom: 10rem;

        @include max-screen($bp-sp) {
            margin-bottom: 5rem;
        }

        &__wrap {
            margin-left: 5rem;
            margin-right: 5rem;
            border-top: 5px solid #000;
            border-bottom: 5px solid #000;
            position: relative;
            padding: 4rem 0;
            height: 32rem;
            display: flex;
            align-items: center;

            @include max-screen($bp-sp) {
                margin-left: 2rem;
                margin-right: 2rem;
                border-width: 3px;
                padding: 2rem 0;
                height: auto;
            }

            div {
                display: flex;
                align-items: center;

                @include max-screen($bp-sp) {
                    flex-direction: column;
                    align-items: flex-start;
                }
            }

            h2 {
                flex-basis: 50%;
                font-size: 10.6rem;
                margin: 0;
                color: #000;
                font-weight: 700;
                line-height: 1.1;

                @include max-screen($bp-sp) {
                    font-size: 5rem;
                    flex-basis: 100%;
                    text-align: left;
                }
            }

            h3 {
                writing-mode: vertical-rl;
                font-size: 30px;
                position: absolute;
                right: -45px;
                top: calc((100% - 150px) / 2);
                margin: 0;
                color: #000;

                @include max-screen($bp-sp) {
                    display: none;
                }
            }
        }

        &__text {
            flex-basis: 50%;
            margin: 0;
            line-height: 2!important;
            font-size: 1.8rem!important;
            overflow: visible!important;
            
            @include max-screen($bp-sp) {
                flex-basis: 100%;
                font-size: 1.4rem!important;
                margin-top: 2rem;
            }
        }
    }

    .b-wrap {
    border-radius: 5px;
    background: #fff;
    background-color: #000;
    box-shadow: 0 0 0 4px #000;
    border: 2px solid #fff;
    padding: 3.2rem;

    @include max-screen($bp-sp) {
        padding: 2rem 1rem;
    }
}

.sec-ttl {
    margin-bottom: 4rem;
    @include max-screen($bp-sp) {
        margin-bottom: 2rem;
    }
}

.sec-ttl-en {
    font-family: 'emulogic', sans-serif;

    font-size: 6.2rem;
    line-height: 1.5;

    @include max-screen($bp-sp) {
        font-size: 3.6rem;
    }

    span {
        display: inline-block;
    }
}

.sec-ttl-ja {
    font-family: "PixelMplus12";
    line-height: 1.5;
    font-size: 2rem;
    opacity: 0;
    @include max-screen($bp-sp) {
        font-size: 1.6rem;
    }
}
</style>

<script>

import gsap from 'gsap';
  import {
  ScrollTrigger
} from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

    document.addEventListener('DOMContentLoaded', () => {
        const links = document.querySelectorAll('.sound-btn');
  
  links.forEach(link => {
    link.addEventListener('click', async (e) => {
      if (link.href && !link.href.startsWith('#')) {  // 実際のリンクの場合のみ
        e.preventDefault();  // デフォルトの遷移をキャンセル
        
        // クリックアニメーション
        gsap.to(link.parentElement, {
          scale: 0.95,
          duration: 0.1,
          yoyo: true,
          repeat: 1
        });

        try {
          // 効果音の再生
          const clickSound = new Audio('../assets/sounds/click.mp3');
          clickSound.volume = 0.2;
          await clickSound.play();

          // 効果音の再生時間を考慮して遅延を設定
          setTimeout(() => {
            window.location.href = link.href;
          }, 1050); // 200ミリ秒の遅延（効果音の長さに応じて調整）

        } catch (error) {
          // 効果音の再生に失敗した場合は直接遷移
          window.location.href = link.href;
        }
      }
    });
  });

    })
</script>