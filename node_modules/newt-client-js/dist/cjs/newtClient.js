"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("axios"),r=require("axios-retry"),t=require("qs");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=a(e),n=a(r);const s=e=>{let r={raw:"",encoded:""};e.and&&(r=(e=>{if(!e)throw new Error("invalid query");const r=[],t=[];return e.forEach((e=>{const{raw:a,encoded:o}=s(e);r.push(a),t.push(o)})),{raw:r.join("&"),encoded:t.join("&")}})(e.and),delete e.and);let a={raw:"",encoded:""};e.or&&(a=(e=>{if(!e)throw new Error("invalid query");const r=[];e.forEach((e=>{const{raw:t}=s(e);r.push(t)}));const t=new URLSearchParams;return t.set("[or]",`(${r.join(";")})`),{raw:`[or]=(${r.join(";")})`,encoded:t.toString()}})(e.or),delete e.or);const o=t.stringify(e,{encode:!1,arrayFormat:"comma"}),n=t.stringify(e,{arrayFormat:"comma"});return{raw:[o,a.raw,r.raw].filter((e=>e)).join("&"),encoded:[n,a.encoded,r.encoded].filter((e=>e)).join("&")}},i=e=>{if(!o.default.isAxiosError(e))throw e;const{config:r,response:t}=e;if(null==t||!t.data)throw e;const{data:a}=t,n={status:a.status,code:a.code,message:a.message};if(r&&(n.request={method:r.method,headers:r.headers},r.url)){const e=new URL(r.url,r.baseURL);n.request.url=e.toString()}const s=new Error;s.name=`${a.status} ${a.code}`;try{s.message=JSON.stringify(n,null,2)}catch{s.message=a.message}throw s},d=(e,r)=>{if(!(e=>{if("object"!=typeof e||null===e)return!1;const r=e;return"number"==typeof r.status&&"string"==typeof r.code&&"string"==typeof r.message})(e))throw e;const{status:t,code:a,message:o}=e,n={status:t,code:a,message:o,request:r},s=new Error;s.name=`${t} ${a}`;try{s.message=JSON.stringify(n,null,2)}catch{s.message=o}throw s};exports.createClient=({spaceUid:e,token:r,apiType:t="cdn",adapter:a,retryOnError:c=!0,retryLimit:u=3,fetch:h})=>{if(!e)throw new Error("spaceUid parameter is required.");if(!r)throw new Error("token parameter is required.");if(!["cdn","api"].includes(t))throw new Error(`apiType parameter should be set to "cdn" or "api". apiType: ${t}`);if(u>10)throw new Error("retryLimit should be a value less than or equal to 10.");const p=new URL(`https://${e}.${t}.newt.so`),l={Authorization:`Bearer ${r}`},w=o.default.create({baseURL:p.toString(),headers:l,adapter:a});c&&n.default(w,{retries:u,retryCondition:e=>{var r,t;return 429===(null===(r=e.response)||void 0===r?void 0:r.status)||500===(null===(t=e.response)||void 0===t?void 0:t.status)},retryDelay:e=>1e3*e});const m=async({appUid:e,modelUid:r,query:t})=>{if(!e)throw new Error("appUid parameter is required.");if(!r)throw new Error("modelUid parameter is required.");const a=new URL(`/v1/${e}/${r}`,p.toString());if(t&&Object.keys(t).length){const{encoded:e}=s(t);a.search=e}if(h){const e={method:"get",headers:l,url:a.toString()};try{const r=await h(a.toString(),{headers:l}),t=await r.json();return r.ok?t:d(t,e)}catch(r){return d(r,e)}}else try{const{data:e}=await w.get(a.pathname+a.search);return e}catch(e){return i(e)}};return{getContents:m,getContent:async({appUid:e,modelUid:r,contentId:t,query:a})=>{if(!e)throw new Error("appUid parameter is required.");if(!r)throw new Error("modelUid parameter is required.");if(!t)throw new Error("contentId parameter is required.");const o=new URL(`/v1/${e}/${r}/${t}`,p.toString());if(a&&Object.keys(a).length){const{encoded:e}=s(a);o.search=e}if(h){const e={method:"get",headers:l,url:o.toString()};try{const r=await h(o.toString(),{headers:l}),t=await r.json();return r.ok?t:d(t,e)}catch(r){return d(r,e)}}else try{const{data:e}=await w.get(o.pathname+o.search);return e}catch(e){return i(e)}},getFirstContent:async({appUid:e,modelUid:r,query:t})=>{if(t&&t.limit)throw new Error("query.limit parameter cannot have a value.");const a={...t,limit:1},{items:o}=await m({appUid:e,modelUid:r,query:a});return 0===o.length?null:o[0]},getApp:async({appUid:e})=>{if(!e)throw new Error("appUid parameter is required.");const r=new URL(`/v1/space/apps/${e}`,p.toString());if(h){const e={method:"get",headers:l,url:r.toString()};try{const t=await h(r.toString(),{headers:l}),a=await t.json();return t.ok?a:d(a,e)}catch(r){return d(r,e)}}else try{const{data:e}=await w.get(r.pathname);return e}catch(e){return i(e)}}}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3dENsaWVudC5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIifQ==
