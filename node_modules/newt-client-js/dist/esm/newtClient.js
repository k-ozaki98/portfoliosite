import e from"axios";import r from"axios-retry";import{stringify as t}from"qs";const o=e=>{let r={raw:"",encoded:""};e.and&&(r=(e=>{if(!e)throw new Error("invalid query");const r=[],t=[];return e.forEach((e=>{const{raw:a,encoded:n}=o(e);r.push(a),t.push(n)})),{raw:r.join("&"),encoded:t.join("&")}})(e.and),delete e.and);let a={raw:"",encoded:""};e.or&&(a=(e=>{if(!e)throw new Error("invalid query");const r=[];e.forEach((e=>{const{raw:t}=o(e);r.push(t)}));const t=new URLSearchParams;return t.set("[or]",`(${r.join(";")})`),{raw:`[or]=(${r.join(";")})`,encoded:t.toString()}})(e.or),delete e.or);const n=t(e,{encode:!1,arrayFormat:"comma"}),s=t(e,{arrayFormat:"comma"});return{raw:[n,a.raw,r.raw].filter((e=>e)).join("&"),encoded:[s,a.encoded,r.encoded].filter((e=>e)).join("&")}},a=r=>{if(!e.isAxiosError(r))throw r;const{config:t,response:o}=r;if(null==o||!o.data)throw r;const{data:a}=o,n={status:a.status,code:a.code,message:a.message};if(t&&(n.request={method:t.method,headers:t.headers},t.url)){const e=new URL(t.url,t.baseURL);n.request.url=e.toString()}const s=new Error;s.name=`${a.status} ${a.code}`;try{s.message=JSON.stringify(n,null,2)}catch{s.message=a.message}throw s},n=(e,r)=>{if(!(e=>{if("object"!=typeof e||null===e)return!1;const r=e;return"number"==typeof r.status&&"string"==typeof r.code&&"string"==typeof r.message})(e))throw e;const{status:t,code:o,message:a}=e,n={status:t,code:o,message:a,request:r},s=new Error;s.name=`${t} ${o}`;try{s.message=JSON.stringify(n,null,2)}catch{s.message=a}throw s},s=t=>{let{spaceUid:s,token:i,apiType:d="cdn",adapter:c,retryOnError:u=!0,retryLimit:h=3,fetch:p}=t;if(!s)throw new Error("spaceUid parameter is required.");if(!i)throw new Error("token parameter is required.");if(!["cdn","api"].includes(d))throw new Error(`apiType parameter should be set to "cdn" or "api". apiType: ${d}`);if(h>10)throw new Error("retryLimit should be a value less than or equal to 10.");const w=new URL(`https://${s}.${d}.newt.so`),l={Authorization:`Bearer ${i}`},m=e.create({baseURL:w.toString(),headers:l,adapter:c});u&&r(m,{retries:h,retryCondition:e=>{var r,t;return 429===(null===(r=e.response)||void 0===r?void 0:r.status)||500===(null===(t=e.response)||void 0===t?void 0:t.status)},retryDelay:e=>1e3*e});const g=async e=>{let{appUid:r,modelUid:t,query:s}=e;if(!r)throw new Error("appUid parameter is required.");if(!t)throw new Error("modelUid parameter is required.");const i=new URL(`/v1/${r}/${t}`,w.toString());if(s&&Object.keys(s).length){const{encoded:e}=o(s);i.search=e}if(p){const e={method:"get",headers:l,url:i.toString()};try{const r=await p(i.toString(),{headers:l}),t=await r.json();return r.ok?t:n(t,e)}catch(r){return n(r,e)}}else try{const{data:e}=await m.get(i.pathname+i.search);return e}catch(e){return a(e)}};return{getContents:g,getContent:async e=>{let{appUid:r,modelUid:t,contentId:s,query:i}=e;if(!r)throw new Error("appUid parameter is required.");if(!t)throw new Error("modelUid parameter is required.");if(!s)throw new Error("contentId parameter is required.");const d=new URL(`/v1/${r}/${t}/${s}`,w.toString());if(i&&Object.keys(i).length){const{encoded:e}=o(i);d.search=e}if(p){const e={method:"get",headers:l,url:d.toString()};try{const r=await p(d.toString(),{headers:l}),t=await r.json();return r.ok?t:n(t,e)}catch(r){return n(r,e)}}else try{const{data:e}=await m.get(d.pathname+d.search);return e}catch(e){return a(e)}},getFirstContent:async e=>{let{appUid:r,modelUid:t,query:o}=e;if(o&&o.limit)throw new Error("query.limit parameter cannot have a value.");const a={...o,limit:1},{items:n}=await g({appUid:r,modelUid:t,query:a});return 0===n.length?null:n[0]},getApp:async e=>{let{appUid:r}=e;if(!r)throw new Error("appUid parameter is required.");const t=new URL(`/v1/space/apps/${r}`,w.toString());if(p){const e={method:"get",headers:l,url:t.toString()};try{const r=await p(t.toString(),{headers:l}),o=await r.json();return r.ok?o:n(o,e)}catch(r){return n(r,e)}}else try{const{data:e}=await m.get(t.pathname);return e}catch(e){return a(e)}}}};export{s as createClient};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV3dENsaWVudC5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIifQ==
